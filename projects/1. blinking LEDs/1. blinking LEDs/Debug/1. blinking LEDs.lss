
1. blinking LEDs.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000250  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000314  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c99  00000000  00000000  0000037c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000840  00000000  00000000  00001015  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000064f  00000000  00000000  00001855  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  00001ea4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000051c  00000000  00000000  00001f58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000536  00000000  00000000  00002474  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  000029aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	a5 d0       	rcall	.+330    	; 0x1e4 <main>
  9a:	d8 c0       	rjmp	.+432    	; 0x24c <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <TurnOnLED_Sequence>:
		}
		else PORTA = PORTA >> 1;
		
		_delay_ms(40);
	}
}
  9e:	80 e0       	ldi	r24, 0x00	; 0
  a0:	13 c0       	rjmp	.+38     	; 0xc8 <TurnOnLED_Sequence+0x2a>
  a2:	21 e0       	ldi	r18, 0x01	; 1
  a4:	30 e0       	ldi	r19, 0x00	; 0
  a6:	08 2e       	mov	r0, r24
  a8:	02 c0       	rjmp	.+4      	; 0xae <TurnOnLED_Sequence+0x10>
  aa:	22 0f       	add	r18, r18
  ac:	33 1f       	adc	r19, r19
  ae:	0a 94       	dec	r0
  b0:	e2 f7       	brpl	.-8      	; 0xaa <TurnOnLED_Sequence+0xc>
  b2:	2b bb       	out	0x1b, r18	; 27
  b4:	2f ef       	ldi	r18, 0xFF	; 255
  b6:	39 e6       	ldi	r19, 0x69	; 105
  b8:	98 e1       	ldi	r25, 0x18	; 24
  ba:	21 50       	subi	r18, 0x01	; 1
  bc:	30 40       	sbci	r19, 0x00	; 0
  be:	90 40       	sbci	r25, 0x00	; 0
  c0:	e1 f7       	brne	.-8      	; 0xba <TurnOnLED_Sequence+0x1c>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <TurnOnLED_Sequence+0x26>
  c4:	00 00       	nop
  c6:	8f 5f       	subi	r24, 0xFF	; 255
  c8:	88 30       	cpi	r24, 0x08	; 8
  ca:	58 f3       	brcs	.-42     	; 0xa2 <TurnOnLED_Sequence+0x4>
  cc:	08 95       	ret

000000ce <TurnOnLED_ReverseSequence>:
  ce:	80 e0       	ldi	r24, 0x00	; 0
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <TurnOnLED_ReverseSequence+0x2a>
  d2:	20 e8       	ldi	r18, 0x80	; 128
  d4:	30 e0       	ldi	r19, 0x00	; 0
  d6:	08 2e       	mov	r0, r24
  d8:	02 c0       	rjmp	.+4      	; 0xde <TurnOnLED_ReverseSequence+0x10>
  da:	35 95       	asr	r19
  dc:	27 95       	ror	r18
  de:	0a 94       	dec	r0
  e0:	e2 f7       	brpl	.-8      	; 0xda <TurnOnLED_ReverseSequence+0xc>
  e2:	2b bb       	out	0x1b, r18	; 27
  e4:	2f ef       	ldi	r18, 0xFF	; 255
  e6:	39 e6       	ldi	r19, 0x69	; 105
  e8:	98 e1       	ldi	r25, 0x18	; 24
  ea:	21 50       	subi	r18, 0x01	; 1
  ec:	30 40       	sbci	r19, 0x00	; 0
  ee:	90 40       	sbci	r25, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <TurnOnLED_ReverseSequence+0x1c>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <TurnOnLED_ReverseSequence+0x26>
  f4:	00 00       	nop
  f6:	8f 5f       	subi	r24, 0xFF	; 255
  f8:	88 30       	cpi	r24, 0x08	; 8
  fa:	58 f3       	brcs	.-42     	; 0xd2 <TurnOnLED_ReverseSequence+0x4>
  fc:	08 95       	ret

000000fe <TurnOnLED_ShiftBits>:
  fe:	8b bb       	out	0x1b, r24	; 27
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	17 c0       	rjmp	.+46     	; 0x132 <TurnOnLED_ShiftBits+0x34>
 104:	df 9b       	sbis	0x1b, 7	; 27
 106:	08 c0       	rjmp	.+16     	; 0x118 <TurnOnLED_ShiftBits+0x1a>
 108:	9b b3       	in	r25, 0x1b	; 27
 10a:	99 0f       	add	r25, r25
 10c:	9b bb       	out	0x1b, r25	; 27
 10e:	9b b3       	in	r25, 0x1b	; 27
 110:	9f 5f       	subi	r25, 0xFF	; 255
 112:	9b bb       	out	0x1b, r25	; 27
 114:	9b bb       	out	0x1b, r25	; 27
 116:	03 c0       	rjmp	.+6      	; 0x11e <TurnOnLED_ShiftBits+0x20>
 118:	9b b3       	in	r25, 0x1b	; 27
 11a:	99 0f       	add	r25, r25
 11c:	9b bb       	out	0x1b, r25	; 27
 11e:	2f ef       	ldi	r18, 0xFF	; 255
 120:	39 e6       	ldi	r19, 0x69	; 105
 122:	98 e1       	ldi	r25, 0x18	; 24
 124:	21 50       	subi	r18, 0x01	; 1
 126:	30 40       	sbci	r19, 0x00	; 0
 128:	90 40       	sbci	r25, 0x00	; 0
 12a:	e1 f7       	brne	.-8      	; 0x124 <TurnOnLED_ShiftBits+0x26>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <TurnOnLED_ShiftBits+0x30>
 12e:	00 00       	nop
 130:	8f 5f       	subi	r24, 0xFF	; 255
 132:	88 30       	cpi	r24, 0x08	; 8
 134:	38 f3       	brcs	.-50     	; 0x104 <TurnOnLED_ShiftBits+0x6>
 136:	08 95       	ret

00000138 <TurnOnLED_ShiftBitsFaster>:
 138:	8b bb       	out	0x1b, r24	; 27
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	17 c0       	rjmp	.+46     	; 0x16c <TurnOnLED_ShiftBitsFaster+0x34>
 13e:	df 9b       	sbis	0x1b, 7	; 27
 140:	08 c0       	rjmp	.+16     	; 0x152 <TurnOnLED_ShiftBitsFaster+0x1a>
 142:	9b b3       	in	r25, 0x1b	; 27
 144:	99 0f       	add	r25, r25
 146:	9b bb       	out	0x1b, r25	; 27
 148:	9b b3       	in	r25, 0x1b	; 27
 14a:	9f 5f       	subi	r25, 0xFF	; 255
 14c:	9b bb       	out	0x1b, r25	; 27
 14e:	9b bb       	out	0x1b, r25	; 27
 150:	03 c0       	rjmp	.+6      	; 0x158 <TurnOnLED_ShiftBitsFaster+0x20>
 152:	9b b3       	in	r25, 0x1b	; 27
 154:	99 0f       	add	r25, r25
 156:	9b bb       	out	0x1b, r25	; 27
 158:	2f ef       	ldi	r18, 0xFF	; 255
 15a:	31 ee       	ldi	r19, 0xE1	; 225
 15c:	94 e0       	ldi	r25, 0x04	; 4
 15e:	21 50       	subi	r18, 0x01	; 1
 160:	30 40       	sbci	r19, 0x00	; 0
 162:	90 40       	sbci	r25, 0x00	; 0
 164:	e1 f7       	brne	.-8      	; 0x15e <TurnOnLED_ShiftBitsFaster+0x26>
 166:	00 c0       	rjmp	.+0      	; 0x168 <TurnOnLED_ShiftBitsFaster+0x30>
 168:	00 00       	nop
 16a:	8f 5f       	subi	r24, 0xFF	; 255
 16c:	88 30       	cpi	r24, 0x08	; 8
 16e:	38 f3       	brcs	.-50     	; 0x13e <TurnOnLED_ShiftBitsFaster+0x6>
 170:	08 95       	ret

00000172 <TurnOnLED_ReverseShiftBitsFaster>:
 172:	8b bb       	out	0x1b, r24	; 27
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	17 c0       	rjmp	.+46     	; 0x1a6 <TurnOnLED_ReverseShiftBitsFaster+0x34>
 178:	d8 9b       	sbis	0x1b, 0	; 27
 17a:	08 c0       	rjmp	.+16     	; 0x18c <TurnOnLED_ReverseShiftBitsFaster+0x1a>
 17c:	9b b3       	in	r25, 0x1b	; 27
 17e:	96 95       	lsr	r25
 180:	9b bb       	out	0x1b, r25	; 27
 182:	9b b3       	in	r25, 0x1b	; 27
 184:	90 58       	subi	r25, 0x80	; 128
 186:	9b bb       	out	0x1b, r25	; 27
 188:	9b bb       	out	0x1b, r25	; 27
 18a:	03 c0       	rjmp	.+6      	; 0x192 <TurnOnLED_ReverseShiftBitsFaster+0x20>
 18c:	9b b3       	in	r25, 0x1b	; 27
 18e:	96 95       	lsr	r25
 190:	9b bb       	out	0x1b, r25	; 27
 192:	2f ef       	ldi	r18, 0xFF	; 255
 194:	31 ee       	ldi	r19, 0xE1	; 225
 196:	94 e0       	ldi	r25, 0x04	; 4
 198:	21 50       	subi	r18, 0x01	; 1
 19a:	30 40       	sbci	r19, 0x00	; 0
 19c:	90 40       	sbci	r25, 0x00	; 0
 19e:	e1 f7       	brne	.-8      	; 0x198 <TurnOnLED_ReverseShiftBitsFaster+0x26>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <TurnOnLED_ReverseShiftBitsFaster+0x30>
 1a2:	00 00       	nop
 1a4:	8f 5f       	subi	r24, 0xFF	; 255
 1a6:	88 30       	cpi	r24, 0x08	; 8
 1a8:	38 f3       	brcs	.-50     	; 0x178 <TurnOnLED_ReverseShiftBitsFaster+0x6>
 1aa:	08 95       	ret

000001ac <TurnOnLED_Alternate>:

void TurnOnLED_Alternate()
{
	uint8_t i = 0;
	for(i=0; i<4; i++)
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	17 c0       	rjmp	.+46     	; 0x1de <TurnOnLED_Alternate+0x32>
	{
		PORTA = 0b01010101;
 1b0:	95 e5       	ldi	r25, 0x55	; 85
 1b2:	9b bb       	out	0x1b, r25	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b4:	2f ef       	ldi	r18, 0xFF	; 255
 1b6:	39 e6       	ldi	r19, 0x69	; 105
 1b8:	98 e1       	ldi	r25, 0x18	; 24
 1ba:	21 50       	subi	r18, 0x01	; 1
 1bc:	30 40       	sbci	r19, 0x00	; 0
 1be:	90 40       	sbci	r25, 0x00	; 0
 1c0:	e1 f7       	brne	.-8      	; 0x1ba <TurnOnLED_Alternate+0xe>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <TurnOnLED_Alternate+0x18>
 1c4:	00 00       	nop
		_delay_ms(500);
		PORTA = 0b10101010;
 1c6:	9a ea       	ldi	r25, 0xAA	; 170
 1c8:	9b bb       	out	0x1b, r25	; 27
 1ca:	2f ef       	ldi	r18, 0xFF	; 255
 1cc:	39 e6       	ldi	r19, 0x69	; 105
 1ce:	98 e1       	ldi	r25, 0x18	; 24
 1d0:	21 50       	subi	r18, 0x01	; 1
 1d2:	30 40       	sbci	r19, 0x00	; 0
 1d4:	90 40       	sbci	r25, 0x00	; 0
 1d6:	e1 f7       	brne	.-8      	; 0x1d0 <TurnOnLED_Alternate+0x24>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <TurnOnLED_Alternate+0x2e>
 1da:	00 00       	nop
}

void TurnOnLED_Alternate()
{
	uint8_t i = 0;
	for(i=0; i<4; i++)
 1dc:	8f 5f       	subi	r24, 0xFF	; 255
 1de:	84 30       	cpi	r24, 0x04	; 4
 1e0:	38 f3       	brcs	.-50     	; 0x1b0 <TurnOnLED_Alternate+0x4>
		PORTA = 0b01010101;
		_delay_ms(500);
		PORTA = 0b10101010;
		_delay_ms(500);
	}
 1e2:	08 95       	ret

000001e4 <main>:
void TurnOnLED_ReverseShiftBitsSuperFaster(uint8_t);

int main(void)
{
	uint8_t i = 0;
	DDRA = 0xff;
 1e4:	8f ef       	ldi	r24, 0xFF	; 255
 1e6:	8a bb       	out	0x1a, r24	; 26
	
	TurnOnLED_Sequence();
 1e8:	5a df       	rcall	.-332    	; 0x9e <TurnOnLED_Sequence>
	TurnOnLED_ReverseSequence();
 1ea:	71 df       	rcall	.-286    	; 0xce <TurnOnLED_ReverseSequence>
	TurnOnLED_Alternate();
 1ec:	df df       	rcall	.-66     	; 0x1ac <TurnOnLED_Alternate>
 1ee:	80 ee       	ldi	r24, 0xE0	; 224
	
	PORTA = 0b11100000;
 1f0:	8b bb       	out	0x1b, r24	; 27
	TurnOnLED_ShiftBits(PORTA);
 1f2:	8b b3       	in	r24, 0x1b	; 27
 1f4:	84 df       	rcall	.-248    	; 0xfe <TurnOnLED_ShiftBits>
	TurnOnLED_ShiftBitsFaster(PORTA);
 1f6:	8b b3       	in	r24, 0x1b	; 27
 1f8:	9f df       	rcall	.-194    	; 0x138 <TurnOnLED_ShiftBitsFaster>
	TurnOnLED_ShiftBitsFaster(PORTA);
 1fa:	8b b3       	in	r24, 0x1b	; 27
 1fc:	9d df       	rcall	.-198    	; 0x138 <TurnOnLED_ShiftBitsFaster>
	TurnOnLED_ReverseShiftBitsFaster(PORTA);
 1fe:	8b b3       	in	r24, 0x1b	; 27
 200:	b8 df       	rcall	.-144    	; 0x172 <TurnOnLED_ReverseShiftBitsFaster>
 202:	8b b3       	in	r24, 0x1b	; 27
	TurnOnLED_ReverseShiftBitsFaster(PORTA);
 204:	b6 df       	rcall	.-148    	; 0x172 <TurnOnLED_ReverseShiftBitsFaster>
 206:	8c ec       	ldi	r24, 0xCC	; 204

	PORTA = 0b11001100;
 208:	8b bb       	out	0x1b, r24	; 27
 20a:	c0 e0       	ldi	r28, 0x00	; 0
	for(i=0; i<4; i++) TurnOnLED_ShiftBitsFaster(PORTA);
 20c:	03 c0       	rjmp	.+6      	; 0x214 <main+0x30>
 20e:	8b b3       	in	r24, 0x1b	; 27
 210:	93 df       	rcall	.-218    	; 0x138 <TurnOnLED_ShiftBitsFaster>
 212:	cf 5f       	subi	r28, 0xFF	; 255
 214:	c4 30       	cpi	r28, 0x04	; 4
 216:	d8 f3       	brcs	.-10     	; 0x20e <main+0x2a>
 218:	8e ef       	ldi	r24, 0xFE	; 254
	
	PORTA = 0b11111110;
 21a:	8b bb       	out	0x1b, r24	; 27
 21c:	c0 e0       	ldi	r28, 0x00	; 0
	for(i=0; i<4; i++) TurnOnLED_ShiftBitsFaster(PORTA);
 21e:	03 c0       	rjmp	.+6      	; 0x226 <main+0x42>
 220:	8b b3       	in	r24, 0x1b	; 27
 222:	8a df       	rcall	.-236    	; 0x138 <TurnOnLED_ShiftBitsFaster>
 224:	cf 5f       	subi	r28, 0xFF	; 255
 226:	c4 30       	cpi	r28, 0x04	; 4
 228:	d8 f3       	brcs	.-10     	; 0x220 <main+0x3c>
 22a:	c0 e0       	ldi	r28, 0x00	; 0
 22c:	0c c0       	rjmp	.+24     	; 0x246 <main+0x62>
 22e:	8e ef       	ldi	r24, 0xFE	; 254
 230:	90 e0       	ldi	r25, 0x00	; 0
	
	for(i=0; i<8; i++)
	{
		PORTA = 0b11111110 << i;
 232:	0c 2e       	mov	r0, r28
 234:	02 c0       	rjmp	.+4      	; 0x23a <main+0x56>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	0a 94       	dec	r0
 23c:	e2 f7       	brpl	.-8      	; 0x236 <main+0x52>
 23e:	8b bb       	out	0x1b, r24	; 27
 240:	8b b3       	in	r24, 0x1b	; 27
		TurnOnLED_ShiftBitsFaster(PORTA);
 242:	7a df       	rcall	.-268    	; 0x138 <TurnOnLED_ShiftBitsFaster>
 244:	cf 5f       	subi	r28, 0xFF	; 255
 246:	c8 30       	cpi	r28, 0x08	; 8
	for(i=0; i<4; i++) TurnOnLED_ShiftBitsFaster(PORTA);
	
	PORTA = 0b11111110;
	for(i=0; i<4; i++) TurnOnLED_ShiftBitsFaster(PORTA);
	
	for(i=0; i<8; i++)
 248:	90 f3       	brcs	.-28     	; 0x22e <main+0x4a>
 24a:	ff cf       	rjmp	.-2      	; 0x24a <main+0x66>

0000024c <_exit>:
 24c:	f8 94       	cli

0000024e <__stop_program>:
 24e:	ff cf       	rjmp	.-2      	; 0x24e <__stop_program>
